package tk.nukeduck.hud.util;

/** Generic interface for objects which can be saved and restored from a
 * single value. Instances also implement {@link ISaveLoad} */
public interface IGetSet<T> {
    /** @return A {@link #set(Object)}-compatible
     * representation of this object */
    T get();

    /** @param value A representation of the object to load,
     * generated by {@link #get()} */
    void set(T value);

    /**
     * Includes special methods on booleans.
     * To provide this functionality, implement this interface as soon as the
     * type parameter in {@code IgetSet<Boolean>} is confirmed.
     */
    public static interface IBoolean extends IGetSet<Boolean> {
        /**
         * Toggles the value.
         */
        default void toggle() {
            set(!get());
        }
    }

    /**
     * Swaps the value of two instances.
     * @param first The first instance.
     * @param second The second value.
     */
    public static <T> void swap(IGetSet<T> first, IGetSet<T> second) {
        T temp = first.get();

        first.set(second.get());
        second.set(temp);
    }
}
